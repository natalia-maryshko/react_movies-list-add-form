{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","pattern/pattern.ts","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","trim","urlIsNotValid","includes","match","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","defaultMovieFormField","count","setCount","newMovie","setNewMovie","setMoviesValue","field","emptyField","URLIsNotValid","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80b8f6cd.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","// eslint-disable-next-line max-len\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { pattern } from '../../pattern/pattern';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string, field: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value.trim();\n\n  const urlIsNotValid = touched\n  && name.includes('Url') && !value.match(pattern)\n   && value.trim();\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value, name)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {urlIsNotValid && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { pattern } from '../../pattern/pattern';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const defaultMovieFormField: Movie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  const [count, setCount] = useState(0);\n  const [newMovie, setNewMovie] = useState(defaultMovieFormField);\n\n  const setMoviesValue = (value: string, field: string): void => {\n    setNewMovie({ ...newMovie, [field]: value });\n  };\n\n  const emptyField = !newMovie.title.trim()\n    || !newMovie.imgUrl.trim()\n    || !newMovie.imdbUrl.trim()\n    || !newMovie.imdbId.trim();\n\n  const URLIsNotValid = !newMovie.imgUrl.match(pattern)\n    || !newMovie.imdbUrl.match(pattern);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (emptyField || URLIsNotValid) {\n      return;\n    }\n\n    setCount(count + 1);\n    onAdd(newMovie);\n    setNewMovie(defaultMovieFormField);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={value => setMoviesValue(value, 'title')}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={value => setMoviesValue(value, 'description')}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={value => setMoviesValue(value, 'imgUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={value => setMoviesValue(value, 'imdbUrl')}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={value => setMoviesValue(value, 'imdbId')}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={emptyField || URLIsNotValid}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addNewMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}